<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="000_020" xml:space="preserve">
		<value>我必須躲在這裡，因為周圍全是怪物！</value>
	</data>
	<data name="000_000" xml:space="preserve">
		<value>嘿，你是來幫我的嗎？拜託告訴我，你是來幫我的！</value>
	</data>
	<data name="000_030" xml:space="preserve">
		<value>唔，牠們都走了，所以你應該安全了。你有受傷嗎？需要送你回家嗎？</value>
	</data>
	<data name="000_060" xml:space="preserve">
		<value>我還要找回賈尼先生的衣服。它掉到下面去了，我不想惹上麻煩。</value>
	</data>
	<data name="000_010" xml:space="preserve">
		<value>我猜，你就是可賓吧。你知道你的姊姊一直在到處找你嗎？</value>
	</data>
	<data name="000_040" xml:space="preserve">
		<value>我想我沒事。我知道怎麼自己回家。我來這裡很多次，但從來沒有出現過怪物！</value>
	</data>
	<data name="000_050" xml:space="preserve">
		<value>你最好趁現在安全時離開。</value>
	</data>
	<data name="000_120" xml:space="preserve">
		<value>哦哇，謝謝！來，拿著這個。你下去之後會需要它的。</value>
	</data>
	<data name="000_130" xml:space="preserve">
		<value>白色共鳴石──這應該派得上用場，謝謝你。現在走吧，快點回村。</value>
	</data>
	<data name="000_110" xml:space="preserve">
		<value>不，可賓，你回家去。我會搞定的。</value>
	</data>
	<data name="000_140" xml:space="preserve">
		<value>你認真的嗎？我們要去找那個混蛋的衣服？我們要做一個洗衣任務？</value>
	</data>
	<data name="001_020" xml:space="preserve">
		<value>好的，好的。再次感謝！你知道嗎，你是個超棒的戰士！</value>
	</data>
	<data name="001_030" xml:space="preserve">
		<value>唔，我……</value>
	</data>
	<data name="001_000" xml:space="preserve">
		<value>哦，又見面了！非常感謝你之前的幫助！</value>
	</data>
	<data name="001_012" xml:space="preserve">
		<value>……是的，小煩。就像衣服那樣。</value>
	</data>
	<data name="001_010" xml:space="preserve">
		<value>不客氣，可賓。只是下次聰明一點，好嗎？外面對於像你這樣的孩子來說太危險了。還有，你不用擔心賈尼。我會搞定他的。</value>
	</data>
	<data name="001_011" xml:space="preserve">
		<value>沒錯，就像衣服那樣！</value>
	</data>
	<data name="001_040" xml:space="preserve">
		<value>你這麼強，我敢說你能輕鬆地達成1000連擊！</value>
	</data>
	<data name="000_160" xml:space="preserve">
		<value>哼。好吧，希望如此。</value>
	</data>
	<data name="000_150" xml:space="preserve">
		<value>我不想讓那可憐的孩子因為這事被賈尼責備。走啦，我們會沿路殺一些怪物的。多棒啊。</value>
	</data>
	<data name="003_000" xml:space="preserve">
		<value>其實，我已經做到了。</value>
	</data>
	<data name="002_000" xml:space="preserve">
		<value>1000連擊？當然，有何不能？</value>
	</data>
	<data name="002_020" xml:space="preserve">
		<value>啊，不，我不會那樣做。但我會努力為你達成連擊的。</value>
	</data>
	<data name="002_010" xml:space="preserve">
		<value>哦哇，酷斃了！嘿，當你連擊到1000下時，你應該說：「這是獻給可賓！」</value>
	</data>
	<data name="001_060" xml:space="preserve">
		<value>小煩，冷靜！</value>
	</data>
	<data name="001_070" xml:space="preserve">
		<value>哇哦！你真的覺得你能做到嗎？</value>
	</data>
	<data name="001_050" xml:space="preserve">
		<value>他當然輕鬆了！他閉著眼睛也能做到！睡眠連擊！</value>
	</data>
	<data name="006_000" xml:space="preserve">
		<value>你是我的英雄，達斯特！</value>
	</data>
	<data name="005_060" xml:space="preserve">
		<value>是啊，妳當然能囉。來吧，該走了。</value>
	</data>
	<data name="005_040" xml:space="preserve">
		<value>哦，妳清楚？</value>
	</data>
	<data name="005_050" xml:space="preserve">
		<value>哼！我已經拿過1000連擊了！我隨時都能達成！永遠！</value>
	</data>
	<data name="005_020" xml:space="preserve">
		<value>好吧，希望你永遠不必如此。</value>
	</data>
	<data name="005_030" xml:space="preserve">
		<value>是啊，相信我，連擊1000得花一段時間呢。我很清楚。</value>
	</data>
	<data name="005_000" xml:space="preserve">
		<value>好了，可賓，我已經達成1000連擊了。</value>
	</data>
	<data name="005_010" xml:space="preserve">
		<value>我就知道你能做到，達斯特！將來有一天，我會像你一樣強大，然後我就能達成1000連擊！</value>
	</data>
	<data name="004_000" xml:space="preserve">
		<value>如果你能達成1000連擊就太棒了！那真的超酷！</value>
	</data>
</root>