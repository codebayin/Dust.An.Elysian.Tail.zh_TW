<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="000_000" xml:space="preserve">
		<value>嘿，你是那個外來客！</value>
	</data>
	<data name="000_010" xml:space="preserve">
		<value>是啊，就是我。</value>
	</data>
	<data name="000_020" xml:space="preserve">
		<value>太好了！那你一定很熟悉周圍的環境！或許你可以幫我一個忙？</value>
	</data>
	<data name="000_030" xml:space="preserve">
		<value>那要看是什麼了。你需要幫什麼忙？</value>
	</data>
	<data name="000_040" xml:space="preserve">
		<value>那麼，請允許我自我介紹一下！我叫費爾，負責讓我們的守衛裝備精良。</value>
	</data>
	<data name="000_050" xml:space="preserve">
		<value>哦，所以他們一身破裝備都是你的錯囉？</value>
	</data>
	<data name="000_060" xml:space="preserve">
		<value>坦白講，是的。也不是我想給他們次等裝備！如果我有更好的材料，我能製作更好的裝備！</value>
	</data>
	<data name="000_070" xml:space="preserve">
		<value>這樣吧？如果你能弄五張魔精皮給我，我會樂意用高於商店的價格買下的。</value>
	</data>
	<data name="000_080" xml:space="preserve">
		<value>我會留意的。</value>
	</data>
	<data name="000_090" xml:space="preserve">
		<value>感激不盡！我會在這裡等你的。</value>
	</data>
	<data name="001_000" xml:space="preserve">
		<value>如果你找到那些材料，請告訴我一聲。</value>
	</data>
	<data name="002_000" xml:space="preserve">
		<value>這些是你要的材料，費爾。</value>
	</data>
	<data name="002_010" xml:space="preserve">
		<value>太棒了！這是你的報酬。如果你願意，我還需要你的幫忙。</value>
	</data>
	<data name="003_020" xml:space="preserve">
		<value>我想強化我們的武器。野獸矛頭雖然原始，但我們可以用其細鑿的石尖作為箭頭！</value>
	</data>
	<data name="003_030" xml:space="preserve">
		<value>如果你能弄八個野獸矛頭給我，我會高價買下的！</value>
	</data>
	<data name="004_000" xml:space="preserve">
		<value>我聽說有一種稀有的材料可以提煉成非常堅硬的護甲漆！</value>
	</data>
	<data name="004_010" xml:space="preserve">
		<value>當然，我說的就是史萊姆。如果你能弄四個黏液刺和四個黏液膜給我，我會付你可觀的報酬的！我甚至還會多給一點，因為這個任務可能有點……呃，黏糊糊。</value>
	</data>
	<data name="005_000" xml:space="preserve">
		<value>你提供的那些獸皮真的很好，但我想用那些巨人身上的材料來持續強化守衛的護甲。</value>
	</data>
	<data name="005_010" xml:space="preserve">
		<value>如果你能弄兩個巨石和兩個巨核給我，我們就準備完成了！我會付你比賣給商店更高的金額！</value>
	</data>
	<data name="006_000" xml:space="preserve">
		<value>那些強化真的把守衛的護甲增強了不少，但現在變得有點僵硬了。我想利用只能從飛行的粉紅艾維身上找到的材料來增加一些靈活性。</value>
	</data>
	<data name="006_010" xml:space="preserve">
		<value>讓我想想……六個艾維翼和六個艾維爪應該就會有效了！當然，我會付你工錢的！</value>
	</data>
	<data name="007_000" xml:space="preserve">
		<value>我有一份最後的工作要交給你，達斯特！這附近住著一種叫弗洛恩的奇怪飛行生物，牠能從觸手發射電球。非常難纏！</value>
	</data>
	<data name="007_010" xml:space="preserve">
		<value>如果你能弄三個弗洛恩觸手和三個弗洛恩電光給我，我就能用它們來強化我們守衛的護甲，並給他們的武器附加一點額外效果！我會為此支付一大筆報酬的，遠高於附近的商店喔！</value>
	</data>
	<data name="100_000" xml:space="preserve">
		<value>太棒了！這是你的報酬。我想已經夠了！我需要的都齊全了，謝謝你！</value>
	</data>
	<data name="101_000" xml:space="preserve">
		<value>謝謝你，達斯特。我想我們不缺材料了。祝你好運！</value>
	</data>
</root>