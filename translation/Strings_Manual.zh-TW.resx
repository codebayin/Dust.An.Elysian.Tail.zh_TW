<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="ContentTitle" xml:space="preserve">
		<value>目錄</value>
	</data>
	<data name="Controls" xml:space="preserve">
		<value>[LTHUMB] 捲動     [A] 目錄     [B] 離開</value>
	</data>
	<data name="ContentControls" xml:space="preserve">
		<value>[A] 選擇     [B] 取消</value>
	</data>
	<data name="Manual" xml:space="preserve">
		<value>[BOOKMARK_-操作-]
[IMAGE_Controller1_0,0,450,312]
[]
使用 [LTHUMB] 或 [DPAD] 移動。按住 [DOWN] 蹲伏。按住 [UP] 或 [DOWN] 調整相應視野。
[]
按 [A] 跳躍。蹲伏於平台上時，按 [A] 可落至下方平台。
[]
按 [X] 施展近戰攻擊。使用 [X] 和 [Y] 連續攻擊可產生連擊。
[]
當戰鬥時按住 [X] 施展格擋，格擋可擋掉襲來的攻擊，有機會讓對手陷入暈眩以提升造成的傷害。
[]
按住 [Y] 施展沙塵暴。注意，這個招式無法持續過久，否則就會受傷。
[]
在空中按住 [Y] 施展空中沙塵暴，可從遠處向敵人進攻。
[]
按 [B] 命令小煩射出魔彈。這會耗費一些能量。完成近戰連擊可恢復能量，投摔和格擋的效果最佳。對小煩的魔彈施展沙塵暴可使攻擊更加有效。
[]
按 [LB] 使用放置在快捷槽的治療物品。
[]
按 [RB] 循環切換小煩可用的魔彈類型。
[]
按 [LT] 或 [RT] 或 [RTHUMB] 施展閃避，可避開敵人的攻擊。閃避會耗費一些能量。
[]
有時小煩會提示你進行相關的動作，以及提醒你區域內有寶藏。
[]
[]
[BOOKMARK_-招式表-]
[]
何來有塵（地面）
[X]、[X]、[X]、[X]
[]
灰燼禁區（地面投摔）
[X]、[X]、[Y]、[Y]
[]
浴火重生（地對空）
[X]、[Y] 
[]
滑鏟踢（地面）
[DOWN] + [A]
[]
毀天滅地（空中投摔）
[X]、[X]、[X]、[Y]
[]
天降之物（空對地）
[DOWN] + [Y]
[]
沙塵暴（地面及空中）
[Y]（按住）
[]
小煩魔彈
[B]（耗費能量）
[]
[]
[BOOKMARK_-介面-]
[IMAGE_HUD2_610,0,549,300]
[]
螢幕上的介面會顯示重要的資訊，例如：你目前的生命值、金幣和經驗等級。經驗條會顯示目前等級下獲得了多少經驗值，能量條會在你射出魔彈或施展閃避時減少。
[]
[]
[BOOKMARK_-物品欄-]
[]
你可以在物品欄中裝備和使用物品，提升屬性，以及查看地圖和任務。
[]
按 [BACK] 進入物品欄。注意，每頁下方的操作選項依內容會有所不同以供輔助。
[]
[]
[BOOKMARK_-經驗與連擊-]
[]
擊敗敵人的同時會獲得經驗值。當擊中敵人後，連擊計數就會開始。每次連續擊中都會增加連擊數。當所有的敵人被擊敗後，他們的經驗總合會被加到以最後連擊為基數的獎勵中。
[]
受到傷害會打斷連擊，就會失去任何獎勵經驗。
[]
記住，如果感到某個區域特別困難，試著練練等級以提升你的屬性。如果想通過世界各地的挑戰競技場，這一點格外重要。
[]
[]
[BOOKMARK_-升級-]
[]
獲得足夠的經驗後，你將會提升一級並獲得技能寶石，可用來提升四項屬性：「生命」值、「攻擊」力、「防禦」力、「小煩」的魔彈威力。
[]
請聰明地分配技能寶石，因為它們會大幅影響你的存活能力。你的「幸運」值會在每次升級時自動增加，它對你的所有動作會有些微影響。
[]
對於那些想跳過升級過程的玩家，你可以從「暫停選單」的「選項」裡開啟「自動升級」。在「休閒」難度下「自動升級」是永久開啟的。
[]
[]
[BOOKMARK_-金幣與物品-]
[]
被擊敗的敵人會掉落金幣、治療物品和隨機材料。
[]
金幣可以用來在商店購買物品。
[]
治療物品可以補充失去的生命值，消除異常狀態，或者提供其它特殊加成。這些物品被找到之後會存放在物品欄以備不時之需（這項動作可以在「選項」裡開啟「自動治療」改變）。
[]
材料結合藍圖，可以讓鐵匠製作世界各地的物品。
[]
[]
[BOOKMARK_-鑰匙與寶藏-]
[]
世界各地散落著等待被發掘的鑰匙、寶箱和籠子。在進入新區域時，如果附近有寶藏，小煩會在頭上顯示 [ICON_364] 提醒你。
[]
寶箱裝有各式各樣的驚喜。任何鑰匙都可以打開寶箱，但一旦用過將會永遠消失。在寶箱前按 [UP] 使用鑰匙並開始進行解鎖小遊戲。如果你解鎖失敗了，鑰匙會歸還給你。
[]
籠子與寶箱類似。它們需要更多鑰匙，但裡面的東西更加特別！
[]
[]
[BOOKMARK_-儲存與死亡-]
[]
當經過儲存古蹟時，你的進度將會被儲存。如果被敵人擊敗，你將會被帶回最後經過的儲存古蹟。
[]
如果擁有傳送石，你可以從任何儲存古蹟返回世界地圖。不過記住，使用傳送石是一趟單程傳送！
[]
[]
[BOOKMARK_-村民與任務-]
[]
並非每個法拉納上的生物都懷有敵意。在旅途上，你會遇見許多友善的面孔。你可以在他們面前按 [UP] 與他們交談。在村裡多走走──也許你可以獲知某些有趣的事，甚至接到一、兩個支線任務！任務角色的頭上都有 [ICON_360]，一眼就能認出來了。
[]
[]
[BOOKMARK_-商店與製作-]
[]
你會在村莊和其它各地遇到商人。你可以藉此拿辛苦賺來的錢買些治療物品和特殊裝備。
[]
如果爬上弓手山隘的山頂，你還會遇到天賦異稟的鐵匠。只要有適合的藍圖和材料，她就會幫你製作特殊裝備（需要收費）。
[]
[]
[BOOKMARK_-挑戰競技場-]
[]
挑戰競技場隱藏在世界各地。每個競技場都保存著一件寶物，而你的表現成績會根據你的通關速度，還有擊殺敵人及破壞燈具獲得的點數得出。你能在每個競技場都獲得完美四顆星嗎？
[]
[]
[BOOKMARK_-暫停選單-]
[]
按 [START] 暫停遊戲。從「暫停選單」裡你可以變更「選項」，「載入」先前的進度，或者「離開」至「主選單」。
[]
從「說明與選項」選單裡，你可以調整音量、手把配置和各種遊戲設定。你也可以隨時查看本遊戲手冊。
[]
從「調整介面」選單裡，你可以調整遊戲內介面的大小和位置，以配合你的顯示方式。</value>
	</data>
</root>