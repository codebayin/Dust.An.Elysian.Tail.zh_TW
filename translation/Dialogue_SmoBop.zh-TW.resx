<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="003_000" xml:space="preserve">
		<value>我愛我的布偶！我愛死她了！超愛超愛超愛的！</value>
	</data>
	<data name="002_000" xml:space="preserve">
		<value>好了，絲莫芭普，這是給妳的小煩布偶。比真的更好喔！</value>
	</data>
	<data name="002_020" xml:space="preserve">
		<value>謝謝，絲莫芭普。</value>
	</data>
	<data name="000_130" xml:space="preserve">
		<value>喂！</value>
	</data>
	<data name="000_100" xml:space="preserve">
		<value>絲莫芭普！</value>
	</data>
	<data name="001_000" xml:space="preserve">
		<value>你回來了！那是我的布偶嗎？</value>
	</data>
	<data name="001_010" xml:space="preserve">
		<value>不是，絲莫芭普，那只是小煩。</value>
	</data>
	<data name="000_010" xml:space="preserve">
		<value>什麼？我嗎？</value>
	</data>
	<data name="000_020" xml:space="preserve">
		<value>是隻會飛的貓耶！</value>
	</data>
	<data name="000_000" xml:space="preserve">
		<value>哦，是隻漂亮的小貓！</value>
	</data>
	<data name="000_030" xml:space="preserve">
		<value>她不是貓，小女孩。她是……我也不知道她是什麼。</value>
	</data>
	<data name="000_040" xml:space="preserve">
		<value>我不是貓，你這笨蛋！我是靈蝠！</value>
	</data>
	<data name="000_060" xml:space="preserve">
		<value>是的，你好！我叫小煩，也許我們見過面？</value>
	</data>
	<data name="000_050" xml:space="preserve">
		<value>別人都那樣叫妳？靈蝠？</value>
	</data>
	<data name="000_120" xml:space="preserve">
		<value>嗯，絲莫芭普，我很抱歉，雖然小煩看起來像玩具，但她並不是。</value>
	</data>
	<data name="000_140" xml:space="preserve">
		<value>噢，我想要她！她會說話！我能跟你換嗎？你看！我有這個盒子！</value>
	</data>
	<data name="000_150" xml:space="preserve">
		<value>喂，塵，你看！那一定是里德的盒子！</value>
	</data>
	<data name="000_080" xml:space="preserve">
		<value>塵！？想想辦法！她要用她那小手來抓我了！</value>
	</data>
	<data name="000_090" xml:space="preserve">
		<value>別擔心，小煩。抱歉，呃，妳叫什麼名字？</value>
	</data>
	<data name="000_070" xml:space="preserve">
		<value>我能抱抱嗎！？我好想要！</value>
	</data>
	<data name="002_010" xml:space="preserve">
		<value>哦，她好漂亮！拿去，這個給你！</value>
	</data>
	<data name="002_040" xml:space="preserve">
		<value>謝謝妳。好好享受妳的小煩吧。</value>
	</data>
	<data name="000_180" xml:space="preserve">
		<value>是啊，或許他能幫我們做小煩外型的布偶給她。畢竟她還太小，無法照顧像妳這樣的寵物。</value>
	</data>
	<data name="000_190" xml:space="preserve">
		<value>是啊，責任太重了，照顧像我這樣的……喂！</value>
	</data>
	<data name="000_160" xml:space="preserve">
		<value>嗯。這樣好了，下次我回地面，我看看能不能找到合適的替代品。然後我們再交換。</value>
	</data>
	<data name="000_170" xml:space="preserve">
		<value>呼！好主意，塵。你知道極光村的那家商店有不少東西。或許商店主人能幫我們搞定？</value>
	</data>
	<data name="002_030" xml:space="preserve">
		<value>那是布洛普不久前送我的！我想他是在地面附近找到的！</value>
	</data>
</root>