<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="000_000" xml:space="preserve">
		<value>誰在那裡？你是誰！？</value>
	</data>
	<data name="000_020" xml:space="preserve">
		<value>拜託，別過來！</value>
	</data>
	<data name="000_030" xml:space="preserve">
		<value>莎拉希！</value>
	</data>
	<data name="000_010" xml:space="preserve">
		<value>妳是莎拉希嗎？別擔心，我是妳的朋友。</value>
	</data>
	<data name="000_060" xml:space="preserve">
		<value>噢，莫斯卡！峽谷村被摧毀了！所有人都被殺了！我、我好害怕！</value>
	</data>
	<data name="000_040" xml:space="preserve">
		<value>莫斯卡？莫斯卡，是你嗎？</value>
	</data>
	<data name="000_050" xml:space="preserve">
		<value>是的，莎拉希！是我！</value>
	</data>
	<data name="000_070" xml:space="preserve">
		<value>妳不必再擔心了，莎拉希。我的朋友，塵，他阻止了峽谷村的威脅。</value>
	</data>
	<data name="000_080" xml:space="preserve">
		<value>那些怪物摧毀了我的家，莫斯卡……我……我不知道該怎麼辦……</value>
	</data>
	<data name="000_090" xml:space="preserve">
		<value>我們一起回極光村，好嗎？我們會渡過難關的。</value>
	</data>
	<data name="000_100" xml:space="preserve">
		<value>你們兩個還好嗎？</value>
	</data>
	<data name="000_110" xml:space="preserve">
		<value>我想沒事的，塵。謝謝你所做的一切。</value>
	</data>
	<data name="000_120" xml:space="preserve">
		<value>全村唯一的倖存者……</value>
	</data>
	<data name="000_130" xml:space="preserve">
		<value>總比無人倖存的好。來吧，我們離開這裡。</value>
	</data>
	<data name="001_000" xml:space="preserve">
		<value>塵，是嗎？之前很抱歉──我太害怕了，忘記要謝謝你。</value>
	</data>
	<data name="002_000" xml:space="preserve">
		<value>謝謝你，塵。</value>
	</data>
	<data name="001_020" xml:space="preserve">
		<value>好多了，和莫斯卡在這裡很安全。我只是……有很多事情要思考。路上保重，好嗎？</value>
	</data>
	<data name="001_010" xml:space="preserve">
		<value>不用介意。妳好點了嗎？</value>
	</data>
</root>